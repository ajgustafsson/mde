[comment encoding = UTF-8 /]
[module GenerateStartClassFromEngine('Group2')]

[template public GenerateStartClassFromEngine(aMainSystem : MainSystem)]
[comment @main/]
[file ('Start.java', false, 'UTF-8')]
package model;
import java.util.Map;
import java.util.HashMap;
import java.util.ArrayList;
import  java.util.*;

public class Start {
	
	public static void main() {
	[for (workflow : Workflow | aMainSystem.workflows)]
		Map<String,Transition> transitions = new HashMap<String,Transition>();
		Map<String,Task> tasks = new HashMap<String,Task>();

		[for (task : Task | workflow.nodes->select(oclIsKindOf(Task)).oclAsType(Task))]
		[task.eClass().name/] [task.name/] = new Task();
		[task.name/].setName("[task.name/]");
		[task.name/].setDescription("[task.description/]");

		[task.permission.eClass().name/] [task.permission.name/] = new [task.permission.eClass().name/]();
		[task.permission.name/].setName("[task.permission.name/]");
		[task.name/].setPermission([task.permission.name/]);

		[task.name/].setState(TaskState.[task.state/]);
		[task.name/].setEnd([task.end/]);
		[task.name/].setStart([task.start/]);
		tasks.put([task.name/].getName(), [task.name/]);
		System.out.println([task.name/].getName() + [task.name/].getState());

		[/for]
		[for (simple : Simple | workflow.nodes->select(oclIsKindOf(Simple)).oclAsType(Simple))]
		[simple.eClass().name/] [simple.name/] = new [simple.eClass().name/]();
		[let previousTaskName : String = simple.previousTasks->first().name]
			
		
		[simple.name/].setName("[simple.name/]");
		[simple.previousTasks.eClass().name/] temp = tasks.get("[previousTaskName/]");

		List<Task> tempList = new ArrayList<Task>();
		tempList.add(temp);
		[simple.name/].setPreviousTasks(tempList);

		List<Transition> tempList2 = new ArrayList<Transition>();
		tempList2.add([simple.name/]);
		temp.setTransition(tempList2);

		[simple.name/].setTask(tasks.get("[simple.task.name/]"));

		transitions.put("[simple.name/]",[simple.name/]);
		
		[/let]
		[/for]

		[workflow.eClass().name/] [workflow.name/] = new [workflow.eClass().name/]();
		List<Node> nodes = new ArrayList<Node>();
		nodes.addAll(transitions.values());
		nodes.addAll(tasks.values());
		[workflow.name/].setNodes(nodes);
		
	
	[/for]
		// [protected ('main')]
		// hello
		// [/protected]
    }

}

[/file]
[/template]