[comment encoding = UTF-8 /]
[module MainSystem('Group2')]

[template public mainSystem(aMainSystem : MainSystem)]
[comment @main/]
[file (aMainSystem.eClass().name + '.java', false, 'UTF-8')]
public class [aMainSystem.eClass().name/] {
	

	}
	[for (workflow : Workflow | aMainSystem.workflows)]
	[file (workflow.eClass().name + '.java', false, 'UTF-8')]
package model;
import java.util.HashMap;
import Engine.EnginePackage;
import Engine.impl.TaskImpl;
import Engine.TaskState;

public class [workflow.eClass().name/] {
	
//	public HashMap<String,Transition> transitions = new HashMap<String,Transition>();




	public Workflow() {}


	public static void main(String args) {
	HashMap<String,TaskImpl> tasks = new HashMap<String,TaskImpl>();

	[for (task : Task | workflow.nodes->select(oclIsKindOf(Task)).oclAsType(Task))]
	TaskImpl [task.name/] = new TaskImpl();
	[task.name/].setName("[task.name/]");
	[task.name/].setState(TaskState.[task.state/]);
	[task.name/].setIsEnd([task.isEnd/]);
	[task.name/].setIsStart([task.isStart/]);
	tasks.put([task.name/].getName(), [task.name/]);
	System.out.println([task.name/].getName() + [task.name/].getState());
	
	[/for]
}/**
	[for (simple : Simple | workflow.nodes->select(oclIsKindOf(Simple)).oclAsType(Simple))]
    [simple.eClass().name/] [simple.name/] = new [simple.eClass().name/]([simple.name/], tasks.get("[simple.task/]"), tasks.get("[simple.previousTask/]"));
	transitions.put("[simple/]","[simple.name/]");
	[/for]*/
	
	
	}		
	[/file]
	[/for]


[/file]
[/template]

[template public instansiateNode(node : Node)]
[file ('noodes' + '.java', false, 'UTF-8')]
public abstract class Node {
 
	public [node.name/];
	
}
[/file]
[/template]
